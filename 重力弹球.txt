重力弹球（Gravity Pinball）游戏需求
创建一个包含CSS和JavaScript的单个HTML文件，实现以下功能：

1. 核心玩法
模拟经典弹球台的物理效果：

小球受重力加速下落，与挡板/障碍物发生弹性碰撞（动量守恒）。

玩家通过键盘（左右箭头键）控制底部挡板反弹小球。

击中不同障碍物获得分数（如闪烁的星星+5分，旋转的方块+10分）。

2. 物理特性
重力：小球垂直加速度（accelerationY = 0.2）。

弹性碰撞：

小球与墙壁/挡板碰撞时速度反转（阻尼系数0.9模拟能量损失）。

挡板击球时根据碰撞位置改变水平速度（边缘碰撞角度更大）。

惯性：挡板移动时有微小延迟（模拟重量感）。

3. 视觉设计
深色科幻风格：

背景：渐变星空（radial-gradient(circle, #0a0e24, #000)）。

小球：发光圆形（box-shadow: 0 0 10px #00f7ff）。

障碍物：几何形状（星星、六边形等），击中时触发缩放动画。

实时显示：右上角分数计数器，底部挡板电量（可消耗的连击能量条）。

4. 交互与功能
控制方式：

键盘左右箭头键控制挡板移动。

空格键发射小球（若小球掉落底部）。

游戏逻辑：

小球掉落底部后，扣除一次生命（初始3条生命）。

连续击中障碍物激活连击模式（分数×2，挡板发光）。

按R键重置游戏。

5. 技术实现要求
纯Vanilla JS：不使用外部物理引擎，自行计算碰撞逻辑。

性能优化：

使用requestAnimationFrame实现流畅动画。

碰撞检测采用AABB（轴对齐包围盒）简化计算。

代码结构：

所有代码内联在单个HTML文件中，按功能分块注释（如// Physics Engine、// Render Loop）。

6. 示例输出格式
html
复制
<!DOCTYPE html>
<html>
<head>
  <style>
    body { background: radial-gradient(circle, #0a0e24, #000); overflow: hidden; }
    #gameCanvas { display: block; margin: 0 auto; border: 1px solid #444; }
  </style>
</head>
<body>
  <canvas id="gameCanvas"></canvas>
  <script>
    // 初始化代码...
    class Ball {
      constructor() { this.x = 100; this.y = 100; this.radius = 10; }
      // 物理更新方法...
    }
    // 游戏主循环...
  </script>
</body>
</html>
运行 HTML
为什么这样设计？
明确的物理参数：直接给出重力、阻尼系数等数值，减少LLM猜测。

游戏化细节：连击系统和生命值增加可玩性。

性能优先：明确要求使用轻量级碰撞检测和渲染优化。





"今天给大家带来一款超带感的科幻风小游戏——《重力弹球》！这不仅仅是一款经典弹球台的复刻，更是一场融合物理模拟与炫酷视觉的指尖挑战。想象一下：一颗发光小球在深邃的星空背景下自由下落，受到重力牵引，与闪烁的星星、旋转的六边形障碍物上演弹性碰撞，每一次精准反弹都让人心跳加速！

玩家通过左右箭头键操控底部挡板，感受那微妙的惯性延迟，仿佛真的在推动一个有重量的物体。击中障碍物不仅能收获分数——星星+5，旋转方块+10——还能触发连击模式，让挡板发光，分数翻倍！但小心，小球一旦坠落底部，三条生命可不是无限的哦。

游戏的亮点在于它的细节：纯手写的物理引擎，动量守恒、阻尼系数0.9的真实碰撞反馈，再加上深色渐变星空和缩放动画的视觉冲击，简直是技术和艺术的完美结合。无论是键盘发射小球的爽快感，还是右上角实时刷新的分数计数器，都让人沉浸其中欲罢不能。

《重力弹球》用一个HTML文件，展现了Vanilla JS的极致魅力——没有外部依赖，流畅又轻量。如果你喜欢挑战反应速度，或者单纯想体验一